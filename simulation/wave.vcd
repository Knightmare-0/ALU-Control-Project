$date
	Tue Jan 16 22:14:09 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module multicore_tb $end
$var wire 16 ! result [15:0] $end
$var wire 2 " coreFlag [1:0] $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 1 % clk $end
$var reg 4 & opcode [3:0] $end
$var reg 1 ' rst $end
$scope module core $end
$var wire 8 ( A [7:0] $end
$var wire 8 ) B [7:0] $end
$var wire 4 * opcode [3:0] $end
$var reg 16 + out [15:0] $end
$upscope $end
$scope module uut $end
$var wire 8 , A [7:0] $end
$var wire 8 - B [7:0] $end
$var wire 1 % clk $end
$var wire 4 . opcode [3:0] $end
$var wire 1 ' rst $end
$var wire 16 / out4 [15:0] $end
$var wire 16 0 out3 [15:0] $end
$var wire 16 1 out2 [15:0] $end
$var wire 16 2 out1 [15:0] $end
$var reg 2 3 coreFlag [1:0] $end
$var reg 16 4 result [15:0] $end
$scope module core1 $end
$var wire 8 5 A [7:0] $end
$var wire 8 6 B [7:0] $end
$var wire 4 7 opcode [3:0] $end
$var reg 16 8 out [15:0] $end
$upscope $end
$scope module core2 $end
$var wire 8 9 A [7:0] $end
$var wire 8 : B [7:0] $end
$var wire 4 ; opcode [3:0] $end
$var reg 16 < out [15:0] $end
$upscope $end
$scope module core3 $end
$var wire 8 = A [7:0] $end
$var wire 8 > B [7:0] $end
$var wire 4 ? opcode [3:0] $end
$var reg 16 @ out [15:0] $end
$upscope $end
$scope module core4 $end
$var wire 8 A A [7:0] $end
$var wire 8 B B [7:0] $end
$var wire 4 C opcode [3:0] $end
$var reg 16 D out [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11111111 D
b0 C
b1010101 B
b10101010 A
b11111111 @
b0 ?
b1010101 >
b10101010 =
b11111111 <
b0 ;
b1010101 :
b10101010 9
b11111111 8
b0 7
b1010101 6
b10101010 5
b0 4
bx 3
b11111111 2
b11111111 1
b11111111 0
b11111111 /
b0 .
b1010101 -
b10101010 ,
b11111111 +
b0 *
b1010101 )
b10101010 (
1'
b0 &
0%
b1010101 $
b10101010 #
bx "
b0 !
$end
#5
1%
#10
0%
0'
#15
b0 "
b0 3
b11111111 !
b11111111 4
1%
#20
b101000101 2
b101000101 8
b101000101 1
b101000101 <
b101000101 0
b101000101 @
b101000101 /
b101000101 D
b101000101 +
0%
b11110000 #
b11110000 (
b11110000 ,
b11110000 5
b11110000 9
b11110000 =
b11110000 A
#25
b101000101 !
b101000101 4
1%
#30
b11111111 +
b11111111 /
b11111111 D
b11111111 0
b11111111 @
b11111111 1
b11111111 <
b11111111 2
b11111111 8
0%
b1111 $
b1111 )
b1111 -
b1111 6
b1111 :
b1111 >
b1111 B
#35
b11111111 !
b11111111 4
1%
#40
0%
#45
1%
#50
b11100001 2
b11100001 8
b11100001 1
b11100001 <
b11100001 0
b11100001 @
b11100001 /
b11100001 D
b11100001 +
0%
b1 &
b1 *
b1 .
b1 7
b1 ;
b1 ?
b1 C
#55
b11100001 !
b11100001 4
1%
#60
b111000010000 +
b111000010000 /
b111000010000 D
b111000010000 0
b111000010000 @
b111000010000 1
b111000010000 <
b111000010000 2
b111000010000 8
0%
b10 &
b10 *
b10 .
b10 7
b10 ;
b10 ?
b10 C
#65
b111000010000 !
b111000010000 4
1%
#70
b0 2
b0 8
b0 1
b0 <
b0 0
b0 @
b0 /
b0 D
b0 +
0%
b11 &
b11 *
b11 .
b11 7
b11 ;
b11 ?
b11 C
#75
b0 !
b0 4
1%
#80
b11111111 +
b11111111 /
b11111111 D
b11111111 0
b11111111 @
b11111111 1
b11111111 <
b11111111 2
b11111111 8
0%
b100 &
b100 *
b100 .
b100 7
b100 ;
b100 ?
b100 C
#85
b1 "
b1 3
b11111111 !
b11111111 4
1%
#90
b11100001 2
b11100001 8
b11100001 1
b11100001 <
b11100001 0
b11100001 @
b11100001 /
b11100001 D
b11100001 +
0%
b101 &
b101 *
b101 .
b101 7
b101 ;
b101 ?
b101 C
#95
b11100001 !
b11100001 4
1%
#100
b111000010000 +
b111000010000 /
b111000010000 D
b111000010000 0
b111000010000 @
b111000010000 1
b111000010000 <
b111000010000 2
b111000010000 8
0%
b110 &
b110 *
b110 .
b110 7
b110 ;
b110 ?
b110 C
#105
b111000010000 !
b111000010000 4
1%
#110
b0 2
b0 8
b0 1
b0 <
b0 0
b0 @
b0 /
b0 D
b0 +
0%
b111 &
b111 *
b111 .
b111 7
b111 ;
b111 ?
b111 C
#115
b0 !
b0 4
1%
#120
b11111111 +
b11111111 /
b11111111 D
b11111111 0
b11111111 @
b11111111 1
b11111111 <
b11111111 2
b11111111 8
0%
b1000 &
b1000 *
b1000 .
b1000 7
b1000 ;
b1000 ?
b1000 C
#125
b10 "
b10 3
b11111111 !
b11111111 4
1%
#130
b11100001 2
b11100001 8
b11100001 1
b11100001 <
b11100001 0
b11100001 @
b11100001 /
b11100001 D
b11100001 +
0%
b1001 &
b1001 *
b1001 .
b1001 7
b1001 ;
b1001 ?
b1001 C
#135
b11100001 !
b11100001 4
1%
#140
b111000010000 +
b111000010000 /
b111000010000 D
b111000010000 0
b111000010000 @
b111000010000 1
b111000010000 <
b111000010000 2
b111000010000 8
0%
b1010 &
b1010 *
b1010 .
b1010 7
b1010 ;
b1010 ?
b1010 C
#145
b111000010000 !
b111000010000 4
1%
#150
b0 2
b0 8
b0 1
b0 <
b0 0
b0 @
b0 /
b0 D
b0 +
0%
b1011 &
b1011 *
b1011 .
b1011 7
b1011 ;
b1011 ?
b1011 C
#155
b0 !
b0 4
1%
#160
b11111111 +
b11111111 /
b11111111 D
b11111111 0
b11111111 @
b11111111 1
b11111111 <
b11111111 2
b11111111 8
0%
b1100 &
b1100 *
b1100 .
b1100 7
b1100 ;
b1100 ?
b1100 C
#165
b11 "
b11 3
b11111111 !
b11111111 4
1%
#170
b11100001 2
b11100001 8
b11100001 1
b11100001 <
b11100001 0
b11100001 @
b11100001 /
b11100001 D
b11100001 +
0%
b1101 &
b1101 *
b1101 .
b1101 7
b1101 ;
b1101 ?
b1101 C
#175
b11100001 !
b11100001 4
1%
#180
b111000010000 +
b111000010000 /
b111000010000 D
b111000010000 0
b111000010000 @
b111000010000 1
b111000010000 <
b111000010000 2
b111000010000 8
0%
b1110 &
b1110 *
b1110 .
b1110 7
b1110 ;
b1110 ?
b1110 C
#185
b111000010000 !
b111000010000 4
1%
#190
b0 2
b0 8
b0 1
b0 <
b0 0
b0 @
b0 /
b0 D
b0 +
0%
b1111 &
b1111 *
b1111 .
b1111 7
b1111 ;
b1111 ?
b1111 C
#195
b0 !
b0 4
1%
#200
0%
#205
1%
#210
0%
#215
1%
#220
0%
#225
1%
#230
0%
#235
1%
#240
0%
#245
1%
#250
0%
#255
1%
#260
0%
#265
1%
#270
0%
#275
1%
#280
0%
#285
1%
#290
